plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

ext {
    libraryVersion = "0.3.0"
    libraryName = 'datetimepicker'
    libraryArtifact = 'datetimepicker'
    libraryDesc = "Date time picker for android"

    siteUrl = "https://github.com/gavinlin/DateTimePicker.git"
    gitUrl = "https://github.com/gavinlin/DateTimePicker.git"

    developerId = "gavin"
    developerName = "gavin"
    developerEmail = "gavinlin.au@gmail.com"

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 3
        versionName "3.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.android.support:support-v4:25.4.0'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    testImplementation 'junit:junit:4.12'
}


// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['DateTimePicker']

    pkg {
        repo = 'android'
        name = libraryName
        userOrg = 'gavinlinau'
        licenses = allLicenses
        vcsUrl = gitUrl

        version {
            name = libraryVersion
            desc = libraryDesc
            released = new Date()
            vcsTag = libraryVersion
        }
    }
}

publishing {
    publications {
        DateTimePicker(MavenPublication) {
            groupId 'com.gavincode'
            artifactId libraryArtifact
            version libraryVersion

            artifact("$buildDir/outputs/aar/library-release.aar")

            pom.withXml {
                def root = asNode()
                root.appendNode('name', libraryName)
                root.appendNode('description', libraryDesc)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

task publishDateTimePickerBintray(dependsOn:[':library:assemble',':library:generatePomFileForDateTimePickerPublication',':library:bintrayUpload']) {
    tasks.findByPath(':library:assemble').mustRunAfter ':library:clean'
    tasks.findByPath(':library:generatePomFileForDateTimePickerPublication').mustRunAfter ':library:assemble'
    tasks.findByPath(':library:bintrayUpload').mustRunAfter ':library:generatePomFileForDateTimePickerPublication'
}

configure(publishDateTimePickerBintray) {
    group = 'bintray'
}